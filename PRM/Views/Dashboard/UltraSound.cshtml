@model PRM.ViewModels.LabViewModel

@{
    ViewBag.Title = "UltraSound";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    ViewBag.Description = "Manage All UltraSound Requests";
}


@using (Html.BeginForm("UltraSound", "Dashboard"))
{
    @Html.AntiForgeryToken()


    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Create A New UltraSound Request</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <div class="box-body">

            <div class="form-horizontal">
                <asp:Label ID="lblUtr" />
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.ClientId, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.DropDownListFor(m => m.LabRequest.ClientId, Model.ClientIdList, "ClientID", new { @id = "ClientID-DropdownID", htmlAttributes = new { @class = "form-control select2", style = "width: 100%" } })
                        @Html.ValidationMessageFor(model => model.LabRequest.ClientId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="ClientName" class="control-label col-lg-2">Client FullName</label>
                    <div class="col-sm-10">
                        <input type="text" name="ClientName" class="form-control" id="fullName" disabled>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.Consultant, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.LabRequest.Consultant, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LabRequest.Consultant, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.Ward, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.LabRequest.Ward, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LabRequest.Ward, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.LMPDate, htmlAttributes: new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.EditorFor(model => model.LabRequest.LMPDate, new { htmlAttributes = new { @class = "form-control", data_inputmask = "'alias': 'dd/mm/yyyy'", data_mask = "" } })
                        </div>
                    </div>

                    @Html.ValidationMessageFor(model => model.LabRequest.LMPDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.RequestDate, htmlAttributes: new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.EditorFor(model => model.LabRequest.RequestDate, new { htmlAttributes = new { @class = "form-control", data_inputmask = "'alias': 'dd/mm/yyyy'", data_mask = "" } })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.LabRequest.RequestDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.DoctorName, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.DropDownListFor(m => m.LabRequest.DoctorName, Model.DoctorIdList, "Requesting Doctor", new { htmlAttributes = new { @class = "form-control select2", style = "width: 100%" } })
                        @Html.ValidationMessageFor(model => model.LabRequest.DoctorName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.IsPregnant, new {@class = "control-label col-lg-2"})
                    <div class="col-lg-10">
                        @Html.CheckBoxFor(model => model.LabRequest.IsPregnant, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LabRequest.IsPregnant, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.PaymentType, new {@class = "control-label col-lg-2"})
                    <div class="col-lg-10">
                        @Html.DropDownListFor(m => m.LabRequest.PaymentType, Model.PaymentTypeList, "Select Payment Type", new { @id = "PaymentType-DropdownID", htmlAttributes = new { @class = "form-control select2", style = "width: 100%"}})
                        @Html.ValidationMessageFor(model => model.LabRequest.PaymentType, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.ExaminationCategory, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.DropDownListFor(m => m.LabRequest.ExaminationCategory, Model.CategoryList, "Select Examination Category", new { htmlAttributes = new { @class = "form-control select2", style = "width: 100%" } })
                        @Html.ValidationMessageFor(model => model.LabRequest.ExaminationCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-2 control-label">Examination Type</label>
                    <div class="col-lg-10">
                        <div id="ExaminationTypeContainer">
                            @Html.Action("ExaminationTypeListView")
                        </div>
                        @Html.ValidationMessageFor(model => model.Examination.ExaminationType, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.ScanId, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.LabRequest.ScanId, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.ValidationMessageFor(model => model.LabRequest.ScanId, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LabRequest.ClinicalSummary, new { @class = "control-label col-lg-2" })
                    <div class="col-lg-10">
                        @Html.TextAreaFor(model => model.LabRequest.ClinicalSummary, new { @class = "form-control", @cols = "100", @rows = "8" } )
                        @Html.ValidationMessageFor(model => model.LabRequest.ClinicalSummary, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => Model.Id)
                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-4">
                        <button type="reset" class="btn btn-default">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">UltraSounds</h3>
                <div class="box-tools">
                    <b class="label label-danger" style="padding: 8.5px">Click to Show or Hide Column:</b>
                    <div class="btn-group btn-group-sm">
                        <a class="showHide btn btn-primary" data-column="0">Id</a>
                        <a class="showHide btn btn-primary" data-column="1">ClientId</a>
                        <a class="showHide btn btn-primary" data-column="2">ClientName</a>
                        <a class="showHide btn btn-primary" data-column="3">Consultant</a>
                        <a class="showHide btn btn-primary" data-column="4">Ward</a>
                        <a class="showHide btn btn-primary" data-column="5">LMPDate</a>
                        <a class="showHide btn btn-primary" data-column="6">DoctorName</a>
                        <a class="showHide btn btn-primary" data-column="7">IsPregnant</a>
                        <a class="showHide btn btn-primary" data-column="7">ClinicalSummary</a>
                    </div>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body table-responsive">
                <table id="UltraSoundTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                ClientId
                            </th>
                            <th>
                                ClientName
                            </th>
                            <th>
                                Consultant
                            </th>
                            <th>
                                Ward
                            </th>
                            <th>
                                LMPDate
                            </th>
                            <th>
                                DoctorName
                            </th>
                            <th>
                                IsPregnant
                            </th>
                            <th>
                                ClinicalSummary
                            </th>
                            <th>
                                RequestDate
                            </th>
                            <th>
                                CreatedBy
                            </th>
                            <th>
                                TimeCreated
                            </th>
                            <th>
                                UpdatedBy
                            </th>
                            <th>
                                TimeUpdated
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>

                    <tbody></tbody>

                    <tfoot>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                ClientId
                            </th>
                            <th>
                                ClientName
                            </th>
                            <th>
                                Consultant
                            </th>
                            <th>
                                Ward
                            </th>
                            <th>
                                LMPDate
                            </th>
                            <th>
                                DoctorName
                            </th>
                            <th>
                                IsPregnant
                            </th>
                            <th>
                                ClinicalSummary
                            </th>
                            <th>
                                RequestDate
                            </th>
                            <th>
                                CreatedBy
                            </th>
                            <th>
                                TimeCreated
                            </th>
                            <th>
                                UpdatedBy
                            </th>
                            <th>
                                TimeUpdated
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#LabRequest_ExaminationCategory').prop("disabled", true);
            $('#ExaminationType-DropdownID').prop("disabled", true);

            // Populate State/Provinces
            $('#ClientID-DropdownID').change(function () {
                $('#fullName').val(this.value);
            });

            $('#PaymentType-DropdownID').change(function () {
                if (this.value !== "") {
                    $('#LabRequest_ExaminationCategory').prop("disabled", false);
                    $('#ExaminationType-DropdownID').prop("disabled", false);
                }
                else {
                    $('#LabRequest_ExaminationCategory').prop("disabled", true);
                    $('#ExaminationType-DropdownID').prop("disabled", true);
                }
            });

            $('#LabRequest_ExaminationCategory').change(function () {
                if (this.value !== "") {
                    var selectedCategory = this.value;
                    var paymenttype = $('#PaymentType-DropdownID').val();
                    console.log(selectedCategory);
                    $('#ExaminationTypeContainer').load('@Url.Action("ExaminationTypeListView")?category=' + selectedCategory + '&paymentType=' + paymenttype);
                }
            });

            //Datemask dd/mm/yyyy
            $("#datemask").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });


            $("#UltraSoundTable").dataTable({
                ajax: {
                    url: "/api/labrequests/?type=UltraSound",
                    dataSrc: ""
                },
                dom: 'Bfrtip',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                columns: [
                    {
                        data: "Id"
                    },
                    {
                        data: "ClientId"
                    },
                    {
                        data: "ClientName"
                    },
                    {
                        data: "Consultant"
                    },
                    {
                        data: "Ward"
                    },
                    {
                        data: "LMPDate"
                    },
                    {
                        data: "DoctorName"
                    },
                    {
                        data: "IsPregnant"
                    },
                    {
                        data: "ClinicalSummary"
                    },
                    {
                        data: "RequestDate"
                    },
                    {
                        data: "CreatedBy"
                    },
                    {
                        data: "TimeCreated",
                        render: function (data, type, UltraSound) {
                            return new Date(UltraSound.TimeCreated).toDateString();
                        }
                    },
                    {
                        data: "UpdatedBy"
                    },
                    {
                        data: "TimeUpdated",
                        render: function (data, type, UltraSound) {
                            return new Date(UltraSound.TimeUpdated).toDateString();
                        }
                    },
                    {
                        data: "Id",
                        render: function (data, type, UltraSound) {
                            return "<a title='Details' class='btn btn-sm btn-info' href='/dashboard/UltraSounddetails/" +
                                UltraSound.Id + "'><i class='fa fa-hand-o-left fa-lg' aria-hidden='true'></i></a>" + " | " +
                                "<a title='Edit' class='btn btn-sm btn-primary' href='/dashboard/editUltraSound/" +
                                UltraSound.Id + "'><i class='fa fa-pencil-square fa-lg' aria-hidden='true'></i></a>" + " | " +
                                "<a title='Delete' href='#' data-id=" + UltraSound.Id + " class='js-delete btn btn-sm btn-danger'><i class='fa fa-trash fa-lg' aria-hidden='true'></i></a>";
                        }
                    }
                ]
            });

            $('#UltraSoundTable tfoot th').each(function () {
                var placeHolderTitle = $('#UltraSoundTable thead th').eq($(this).index()).text();
                $(this).html('<input type="text" class="form-control input input-sm" placeholder = "Search ' + placeHolderTitle + '" />');

                initSearch();
            });

            function initSearch() {
                $('#UltraSoundTable').dataTable().api().columns().every(function () {
                    var column = this;
                    $(this.footer()).find('input').on('keyup change', function () {
                        column.search(this.value).draw();
                    });
                });
            }

            $('a.showHide').on("click", function (e) {
                e.preventDefault();
                // Get the column API object
                var column = $('#UltraSoundTable').dataTable().api().column($(this).attr('data-column'));
                // Toggle the visibility
                column.visible(!column.visible());

            });

            $('#UltraSoundTable tbody').on("click", 'a.js-delete', function () {
                var anchor = $(this);
                bootbox.confirm("Are you sure you want to delete this UltraSound and all its data?", function (result) {
                    if (result) {
                        var dialog = bootbox.dialog({
                            message: '<p class="text-center"><i class="fa fa-refresh fa-spin"></i> Processing request...</p>',
                            closeButton: false
                        });
                        $.ajax({
                            url: "/api/UltraSounds/" + anchor.attr("data-id"),
                            method: "DELETE",
                            success: function () {
                                //console.log("success);
                                dialog.modal('hide'); //close the custom dialog
                                $('#UltraSoundTable').dataTable().api().row(anchor.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}
