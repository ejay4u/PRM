@using MongoDB.Bson
@using PRM.Controllers
@model PRM.ViewModels.ClientViewModel
@{
    ViewBag.Title = "Client";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    ViewBag.Description = "Manage All Clients";
}

@using (Html.BeginForm("Client","Dashboard"))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-xs-12 col-md-12">
            <div class="box box-default">
                <div class="box-header with-border">
                    <h3 class="box-title">Add New Client</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group">
                            <div class="col-lg-10">
                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.Surname, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Client.Surname, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Client.Surname, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.OtherName, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Client.OtherName, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Client.OtherName, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.Client.DateOfBirth, new { htmlAttributes = new { @class = "form-control", data_inputmask = "'alias': 'dd/mm/yyyy'", data_mask = "" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Client.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.Gender, htmlAttributes: new {@class = "control-label"})
                                @Html.DropDownListFor(model => model.Client.Gender, Model.GenderList, "Select Gender", new {htmlAttributes = new {@class = "form-control select2"}})
                                @Html.ValidationMessageFor(model => model.Client.Gender, "", new {@class = "text-danger"})
                            </div>                     
                            @*<div class="form-group">
                                @Html.LabelFor(model => model.Client.Status, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Client.Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Client.Status, "", new { @class = "text-danger" })
                            </div>*@
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Client.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Client.Address, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Client.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Client.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Client.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Client.Email, "", new { @class = "text-danger" })
                            </div>
                            @*<div class="form-group">
                                @Html.LabelFor(model => model.Business.ContactTel, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Business.ContactTel, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Business.ContactTel, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Business.ContactPhone, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Business.ContactPhone, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Business.ContactPhone, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Business.ContactEmail, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Business.ContactEmail, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Business.ContactEmail, "", new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Client.Status, htmlAttributes: new {@class = "control-label"})
                                @Html.EditorFor(model => model.Client.Status, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Client.Status, "", new {@class = "text-danger"})
                            </div>*@
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Client.ClientId)
                        </div>
                        <div class="form-group">
                            <div class="col-lg-10 col-lg-offset-4">
                                <button type="reset" class="btn btn-default">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Clients</h3>
                <div class="box-tools">
                    <b class="label label-danger" style="padding: 8.5px">Click to Show or Hide Column:</b>
                    <div class="btn-group btn-group-sm">
                        <a class="showHide btn btn-primary" data-column="0">Id</a>
                        <a class="showHide btn btn-primary" data-column="1">ClientId</a>
                        <a class="showHide btn btn-primary" data-column="2">Surname</a>
                        <a class="showHide btn btn-primary" data-column="3">OtherName</a>
                        <a class="showHide btn btn-primary" data-column="4">DateOfBirth</a>
                        <a class="showHide btn btn-primary" data-column="5">Gender</a>
                        <a class="showHide btn btn-primary" data-column="6">Address</a>
                        <a class="showHide btn btn-primary" data-column="7">PhoneNumber</a>
                    </div>
                </div>
            </div>

            <!-- /.box-header -->
            <div class="box-body table-responsive">
                <table id="ClientTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                ClientId
                            </th>
                            <th>
                                Surname
                            </th>
                            <th>
                                OtherName
                            </th>
                            <th>
                                DateOfBirth
                            </th>
                            <th>
                                Gender
                            </th>
                            <th>
                                Address
                            </th>
                            <th>
                                PhoneNumber
                            </th>
                            <th>
                                Email
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                CreatedBy
                            </th>
                            <th>
                                TimeCreated
                            </th>
                            <th>
                                UpdatedBy
                            </th>
                            <th>
                                TimeUpdated
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                    </tbody>

                    <tfoot>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                ClientId
                            </th>
                            <th>
                                Surname
                            </th>
                            <th>
                                OtherName
                            </th>
                            <th>
                                DateOfBirth
                            </th>
                            <th>
                                Gender
                            </th>
                            <th>
                                Address
                            </th>
                            <th>
                                PhoneNumber
                            </th>
                            <th>
                                Email
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                CreatedBy
                            </th>
                            <th>
                                TimeCreated
                            </th>
                            <th>
                                UpdatedBy
                            </th>
                            <th>
                                TimeUpdated
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            //Datemask dd/mm/yyyy
            $("#datemask").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });

            $("#ClientTable").dataTable({
                ajax: {
                    url: "/api/clients",
                    dataSrc: ""
                },
                dom: 'Bfrtip',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                columns: [
                    {
                        data: "Id"
                    },
                    {
                        data: "ClientId"
                    },
                    {
                        data: "Surname"
                    },
                    {
                        data: "OtherName"
                    },
                    {
                        data: "DateOfBirth"
                    },
                    {
                        data: "Gender"
                    },
                    {
                        data: "Address"
                    },
                    {
                        data: "PhoneNumber"
                    },
                    {
                        data: "Email"
                    },
                    {
                        data: "Status"
                    },
                    {
                        data: "CreatedBy"
                    },
                    {
                        data: "TimeCreated",
                        render: function (data, type, client) {
                            return new Date(client.TimeCreated).toDateString();
                        }
                    },
                    {
                        data: "UpdatedBy"
                    },  
                    {
                        data: "TimeUpdated",
                        render: function (data, type, client) {
                            return new Date(client.TimeUpdated).toDateString();
                        }
                    },
                    {
                        data: "Id",
                        render: function (data, type, client) {
                            return "<a title='Details' class='btn btn-sm btn-info' href='/dashboard/clientdetails/" +
                                client.Id + "'><i class='fa fa-hand-o-left fa-lg' aria-hidden='true'></i></a>" + " | " +
                                "<a title='Edit' class='btn btn-sm btn-primary' href='/dashboard/editclient/" +
                                client.Id + "'><i class='fa fa-pencil-square fa-lg' aria-hidden='true'></i></a>" + " | " +
                                "<a title='Delete' href='#' data-id=" + client.Id + " class='js-delete btn btn-sm btn-danger'><i class='fa fa-trash fa-lg' aria-hidden='true'></i></a>";
                        }
                    }
                ]
            });

            $('#ClientTable tfoot th').each(function () {
                var placeHolderTitle = $('#ClientTable thead th').eq($(this).index()).text();
                $(this).html('<input type="text" class="form-control input input-sm" placeholder = "Search ' + placeHolderTitle + '" />');

                initSearch();
            });

            function initSearch() {
                $('#ClientTable').dataTable().api().columns().every(function () {
                    var column = this;
                    $(this.footer()).find('input').on('keyup change', function () {
                        column.search(this.value).draw();
                    });
                });
            }

            $('a.showHide').on("click", function (e) {
                e.preventDefault();
                // Get the column API object
                var column = $('#ClientTable').dataTable().api().column($(this).attr('data-column'));
                // Toggle the visibility
                column.visible(!column.visible());

            });

            $('#ClientTable tbody').on("click", 'a.js-delete', function () {
                var anchor = $(this);
                bootbox.confirm("Are you sure you want to delete this client and all its data?" , function(result) {
                    if (result) {
                        var dialog = bootbox.dialog({
                            message: '<p class="text-center"><i class="fa fa-refresh fa-spin"></i> Processing request...</p>',
                            closeButton: false
                        });
                        $.ajax({
                            url: "/api/clients/" + anchor.attr("data-id"),
                            method: "DELETE",
                            success: function() {
                                //console.log("success);
                                dialog.modal('hide'); //close the custom dialog
                                $('#ClientTable').dataTable().api().row(anchor.parents("tr")).remove().draw();
                            }                
                        });
                    }
                });
            });
        });

    </script>
}
